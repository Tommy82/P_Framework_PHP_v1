<?php

namespace modules\core\setup;
use core\App;
use core\modules\Modules;

ini_set('error_reporting', E_ALL);

class Module extends Modules {

    public function __construct(App &$app)
    {
        parent::__construct($app);
    }

    public function start(): void
    {
        parent::start(); // TODO: Change the autogenerated stub

        $this->checkDirectory($_SERVER["DOCUMENT_ROOT"]);
    }

    function checkDirectory(string $directory): void
    {
        foreach ( scandir($directory) as $file ) {
            if ( $file === ".." or $file === ".") continue;
            if ( is_dir($directory . "/" . $file)) {
                //echo "-> Dir: " .  $file . "<br>";
                $this->checkDirectory($directory . "/" . $file);
            } else {
                if ( $file && strtolower($file) === 'module.php') {
                    $className = str_replace($_SERVER["DOCUMENT_ROOT"]. "/", '', $directory);
                    $className .= "/Module";
                    $className = str_replace("/", "\\",$className );
                    $module = new $className($this->app);
                    if ( $module && method_exists($module, 'install') ) {
                        echo "-> Modul: '" . $className . "' wird installiert<br>";
                        $module->install();
                    } else {
                        echo "-> Modul: '$className' hat keine Installationsroutine<br>";
                    }
                }
            }
        }
    }
}
